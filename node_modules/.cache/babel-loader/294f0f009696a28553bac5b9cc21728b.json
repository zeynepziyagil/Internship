{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusraziyagil/Desktop/aaaaa/reactOneInternshipFinalProject/src/comp/Companies.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FILTERED, FILTEREN } from \"../actions\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  Aox: {\n    backgroundColor: \"#FFFF\",\n    padding: \"15px\"\n  },\n  Box: {\n    backgroundColor: \"#FFFF\",\n    borderRadius: \"3px\",\n    padding: \"25px\",\n    height: \"200px\",\n    overflow: \"scroll\"\n  }\n}));\n\nconst Companies = ({\n  brands,\n  filters,\n  editedBrands,\n  dispatch\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleChange = event => {\n    const eventValue = event.target.name;\n    const eventType = event.target.checked;\n    console.log(event.target.name);\n    console.log(event.target.checked);\n    dispatch({\n      type: FILTERED,\n      payload: {\n        eventValue,\n        eventType\n      }\n    });\n  };\n\n  const handleSearch = event => {\n    const eventValue = event.target.value.toLowerCase();\n    console.log(\"search value\", event.target.value);\n    dispatch({\n      type: FILTEREN,\n      payload: {\n        eventValue\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Aox,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search\",\n      variant: \"outlined\",\n      className: classes.search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.Box,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: filters.length ? false : true,\n          disabled: filters.length ? true : false,\n          name: \"All\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this),\n        label: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), editedBrands.length ? editedBrands.map(brand => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: handleChange,\n              name: brand.name,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this),\n            label: brand.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 47\n          }, this)]\n        }, brand.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Matching Brands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Companies, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Companies;\n\nconst mapStateToProps = state => {\n  return {\n    brands: state.brands,\n    filters: state.filters,\n    brandSearchTerm: state.brandSearchTerm,\n    editedBrands: state.editedBrands\n  };\n};\n\nexport default connect(mapStateToProps)(Companies);\n\nvar _c;\n\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"sources":["/Users/zeynepbusraziyagil/Desktop/aaaaa/reactOneInternshipFinalProject/src/comp/Companies.js"],"names":["React","FormControlLabel","Checkbox","useState","connect","FILTERED","FILTEREN","TextField","makeStyles","Box","useStyles","theme","Aox","backgroundColor","padding","borderRadius","height","overflow","Companies","brands","filters","editedBrands","dispatch","classes","handleChange","event","eventValue","target","name","eventType","checked","console","log","type","payload","handleSearch","value","toLowerCase","search","length","map","brand","id","mapStateToProps","state","brandSearchTerm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAoBC,QAApB,QAAoC,YAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AAGrCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,eAAe,EAAE,OADhB;AAEDC,IAAAA,OAAO,EAAE;AAFR,GAHgC;AAOrCL,EAAAA,GAAG,EAAE;AACDI,IAAAA,eAAe,EAAE,OADhB;AAEDE,IAAAA,YAAY,EAAE,KAFb;AAGDD,IAAAA,OAAO,EAAE,MAHR;AAIDE,IAAAA,MAAM,EAAE,OAJP;AAKDC,IAAAA,QAAQ,EAAE;AALT;AAPgC,CAAZ,CAAD,CAA5B;;AAiBA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,YAAnB;AAAiCC,EAAAA;AAAjC,CAAD,KAAkD;AAAA;;AAChE,QAAMC,OAAO,GAAGb,SAAS,EAAzB;;AACA,QAAMc,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAhC;AACA,UAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAN,CAAaG,OAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,MAAN,CAAaC,IAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,MAAN,CAAaG,OAAzB;AACAR,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAG5B,QAAT;AAAmB6B,MAAAA,OAAO,EAAE;AAAER,QAAAA,UAAF;AAAcG,QAAAA;AAAd;AAA5B,KAAD,CAAR;AACH,GAND;;AAOA,QAAMM,YAAY,GAAIV,KAAD,IAAW;AAC5B,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaS,KAAb,CAAmBC,WAAnB,EAAnB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,KAAK,CAACE,MAAN,CAAaS,KAAzC;AACAd,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAG3B,QAAT;AAAmB4B,MAAAA,OAAO,EAAE;AAAER,QAAAA;AAAF;AAA5B,KAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACX,GAAxB;AAAA,4BACI,QAAC,SAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,UAAnC;AAA8C,MAAA,SAAS,EAAEW,OAAO,CAACe,MAAjE;AAAyE,MAAA,QAAQ,EAAEH;AAAnF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACd,GAAxB;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,OAAO,eACjB,QAAC,QAAD;AACI,UAAA,OAAO,EAAEW,OAAO,CAACmB,MAAR,GAAkB,KAAlB,GAA4B,IADzC;AAEI,UAAA,QAAQ,EAAEnB,OAAO,CAACmB,MAAR,GAAkB,IAAlB,GAA2B,KAFzC;AAGI,UAAA,IAAI,EAAC,KAHT;AAII,UAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBADR;AAQI,QAAA,KAAK,EAAC;AARV;AAAA;AAAA;AAAA;AAAA,cADJ,EAYKlB,YAAY,CAACkB,MAAb,GAAuBlB,YAAY,CAACmB,GAAb,CAAkBC,KAAD,IAAW;AACnD,4BAAQ;AAAA,uCAAqB,QAAC,gBAAD;AAAkB,YAAA,OAAO,eAC/B,QAAC,QAAD;AAAU,cAAA,QAAQ,EAAEjB,YAApB;AAAkC,cAAA,IAAI,EAAEiB,KAAK,CAACb,IAA9C;AAAqD,cAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,oBADM;AAET,YAAA,KAAK,EAAEa,KAAK,CAACb;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAArB;AAAA,WAAUa,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAGQ,OAJe,CAAvB,gBAIiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAvCD;;GAAMxB,S;UACcR,S;;;KADdQ,S;;AAyCN,MAAMyB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEzB,IAAAA,MAAM,EAAEyB,KAAK,CAACzB,MAAhB;AAAwBC,IAAAA,OAAO,EAAEwB,KAAK,CAACxB,OAAvC;AAAgDyB,IAAAA,eAAe,EAAED,KAAK,CAACC,eAAvE;AAAwFxB,IAAAA,YAAY,EAAEuB,KAAK,CAACvB;AAA5G,GAAP;AACH,CAFD;;AAIA,eAAejB,OAAO,CAACuC,eAAD,CAAP,CAAyBzB,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FILTERED,  FILTEREN } from \"../actions\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n   \n    \n    Aox: {\n        backgroundColor: \"#FFFF\",\n        padding: \"15px\",\n    },\n    Box: {\n        backgroundColor: \"#FFFF\",\n        borderRadius: \"3px\",\n        padding: \"25px\",\n        height: \"200px\",\n        overflow: \"scroll\"\n    },\n  \n}));\n\nconst Companies = ({ brands, filters, editedBrands, dispatch, }) => {\n    const classes = useStyles();\n    const handleChange = (event) => {\n        const eventValue = event.target.name;\n        const eventType = event.target.checked;\n        console.log(event.target.name);\n        console.log(event.target.checked);\n        dispatch({ type:  FILTERED, payload: { eventValue, eventType } });\n    };\n    const handleSearch = (event) => {\n        const eventValue = event.target.value.toLowerCase();\n        console.log(\"search value\", event.target.value);\n        dispatch({ type:  FILTEREN, payload: { eventValue } });\n    };\n   \n    return (\n        <div className={classes.Aox}>\n            <TextField  label=\"Search\" variant=\"outlined\" className={classes.search} onChange={handleSearch} />\n            <Box className={classes.Box}>\n                <FormControlLabel control={\n                        <Checkbox\n                            checked={filters.length ? (false) : (true)}\n                            disabled={filters.length ? (true) : (false)}\n                            name=\"All\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"All\"\n                />\n                \n                {editedBrands.length ? (editedBrands.map((brand) => {\n                 return (<div key={brand.id}> <FormControlLabel control={\n                                        <Checkbox onChange={handleChange} name={brand.name}  color=\"primary\"/>\n                                    }label={brand.name}/>\n                </div> )})) : (   <p>No Matching Brands</p> )}\n            </Box>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { brands: state.brands, filters: state.filters, brandSearchTerm: state.brandSearchTerm, editedBrands: state.editedBrands }\n}\n\nexport default connect(mapStateToProps)(Companies);"]},"metadata":{},"sourceType":"module"}