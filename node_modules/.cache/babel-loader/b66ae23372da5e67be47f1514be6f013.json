{"ast":null,"code":"var _jsxFileName = \"/Users/zeynepbusraziyagil/Desktop/aaaaa/reactOneInternshipFinalProject/src/comp/BrandsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FILTERED, FILTEREN } from \"../actions\";\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  brandsBox: {\n    backgroundColor: \"#FFFF\",\n    borderRadius: \"3px\",\n    padding: \"25px\",\n    height: \"200px\",\n    overflow: \"scroll\"\n  },\n  brandsFullBox: {\n    backgroundColor: \"#FFFF\",\n    padding: \"15px\"\n  }\n}));\n\nconst BrandsContainer = ({\n  brands,\n  filters,\n  editedBrands,\n  dispatch\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleChange = event => {\n    const eventValue = event.target.name;\n    const eventType = event.target.checked;\n    console.log(event.target.name);\n    console.log(event.target.checked);\n    dispatch({\n      type: FILTERED,\n      payload: {\n        eventValue,\n        eventType\n      }\n    });\n  };\n\n  const handleSearch = event => {\n    const eventValue = event.target.value.toLowerCase();\n    console.log(\"search value\", event.target.value);\n    dispatch({\n      type: FILTEREN,\n      payload: {\n        eventValue\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.brandsFullBox,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search Brand\",\n      variant: \"outlined\",\n      className: classes.search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.brandsBox,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: filters.length ? false : true,\n          disabled: filters.length ? true : false,\n          name: \"All\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this),\n        label: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), editedBrands.length ? editedBrands.map(brand => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: handleChange,\n              name: brand.name,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this),\n            label: brand.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, brand.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Matching Brands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BrandsContainer, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BrandsContainer;\n\nconst mapStateToProps = state => {\n  return {\n    brands: state.brands,\n    filters: state.filters,\n    brandSearchTerm: state.brandSearchTerm,\n    editedBrands: state.editedBrands\n  };\n};\n\nexport default connect(mapStateToProps)(BrandsContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"BrandsContainer\");","map":{"version":3,"sources":["/Users/zeynepbusraziyagil/Desktop/aaaaa/reactOneInternshipFinalProject/src/comp/BrandsContainer.js"],"names":["React","connect","makeStyles","Box","FormControlLabel","Checkbox","FILTERED","FILTEREN","TextField","useStyles","theme","brandsBox","backgroundColor","borderRadius","padding","height","overflow","brandsFullBox","BrandsContainer","brands","filters","editedBrands","dispatch","classes","handleChange","event","eventValue","target","name","eventType","checked","console","log","type","payload","handleSearch","value","toLowerCase","search","length","map","brand","id","mapStateToProps","state","brandSearchTerm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FILTERED,  FILTEREN } from \"../actions\";\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    brandsBox: {\n        backgroundColor: \"#FFFF\",\n        borderRadius: \"3px\",\n        padding: \"25px\",\n        height: \"200px\",\n        overflow: \"scroll\"\n    },\n    brandsFullBox: {\n        backgroundColor: \"#FFFF\",\n        padding: \"15px\",\n    },\n  \n}));\n\nconst BrandsContainer = ({ brands, filters, editedBrands, dispatch, }) => {\n    const classes = useStyles();\n    const handleChange = (event) => {\n        const eventValue = event.target.name;\n        const eventType = event.target.checked;\n        console.log(event.target.name);\n        console.log(event.target.checked);\n        dispatch({ type:  FILTERED, payload: { eventValue, eventType } });\n    };\n    const handleSearch = (event) => {\n        const eventValue = event.target.value.toLowerCase();\n        console.log(\"search value\", event.target.value);\n        dispatch({ type:  FILTEREN, payload: { eventValue } });\n    };\n    return (\n        <div className={classes.brandsFullBox}>\n            <TextField  label=\"Search Brand\" variant=\"outlined\" className={classes.search} onChange={handleSearch} />\n            <Box className={classes.brandsBox}>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={filters.length ? (false) : (true)}\n                            disabled={filters.length ? (true) : (false)}\n                            name=\"All\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"All\"\n                />\n                <br></br>\n                {editedBrands.length ? (\n                    editedBrands.map((brand) => {\n                        return (\n                            <div key={brand.id}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange}\n                                            name={brand.name}\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={brand.name}\n                                />\n                                <br></br>\n                            </div>\n                        )\n                    })\n                ) : (\n                    <p>No Matching Brands</p>\n                )}\n            </Box>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { brands: state.brands, filters: state.filters, brandSearchTerm: state.brandSearchTerm, editedBrands: state.editedBrands }\n}\n\nexport default connect(mapStateToProps)(BrandsContainer);"]},"metadata":{},"sourceType":"module"}